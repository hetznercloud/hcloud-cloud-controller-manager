# hccm program command line arguments.
# The "--allocate-node-cidrs" + "--cluster-cidr" arguments are managed by the chart and should *not* be set directly here.
args:
  cloud-provider: hcloud
  leader-elect: "false"
  allow-untagged-cloud: ""

  # Read issue #395 to understand how changes to this value affect you.
  # https://github.com/hetznercloud/hcloud-cloud-controller-manager/issues/395
  route-reconciliation-period: 30s

# hccm environment variables
env:
  # The following two variables should *not* be set here:
  # HCLOUD_METRICS_ENABLED - see monitoring.enabled
  # HCLOUD_NETWORK - see networking.enabled
  HCLOUD_TOKEN:
    valueFrom:
      secretKeyRef:
        name: hcloud
        key: token
  NODE_NAME:
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName

image:
  repository: hetznercloud/hcloud-cloud-controller-manager
  tag: '{{ $.Chart.Version }}'

monitoring:
  # When enabled, the hccm Pod will serve metrics on port :8233
  enabled: true
  podMonitor:
    # When enabled (and metrics.enabled=true), a PodMonitor will be deployed to scrape metrics.
    # The PodMonitor [1] CRD must already exist in the target cluster.
    enabled: false
    # PodMonitorSpec to be deployed. The "selector" field is set elsewhere and should *not* be used here.
    # https://prometheus-operator.dev/docs/operator/api/#monitoring.coreos.com/v1.PodMonitorSpec
    spec:
      podMetricsEndpoints:
        - port: metrics

nameOverride: ~

networking:
  # If enabled, hcloud-ccm will be deployed with networking support.
  enabled: false
  # If networking is enabled, clusterCIDR must match the PodCIDR subnet your cluster has been configured with.
  # The default "10.244.0.0/16" assumes you're using Flannel with default configuration.
  clusterCIDR: 10.244.0.0/16
  network:
    valueFrom:
      secretKeyRef:
        name: hcloud
        key: network

# Resource requests for the deployed hccm Pod.
resources:
  requests:
    cpu: 100m
    memory: 50Mi

selectorLabels:
  app.kubernetes.io/name: '{{ include "hcloud-cloud-controller-manager.name" $ }}'
  app.kubernetes.io/instance: '{{ $.Release.Name }}'
