name: Run e2e tests
on:
  pull_request: {}
  push:
    branches: [main]
jobs:
  k3s:
    name: k3s ${{ matrix.k3s }}
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k3s: [ v1.25, v1.26, v1.27, v1.28 ]
      fail-fast: false

    env:
      K3S_CHANNEL: ${{ matrix.k3s }}
      SCOPE: gha-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.k3s }}

      # Domain must be available in the account running the tests. This domain is available in the account
      # running the public integration tests.
      CERT_DOMAIN: hc-integrations-test.de

    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - uses: actions/checkout@master
      - uses: hetznercloud/tps-action@main
        with:
          token: ${{ secrets.HCLOUD_TOKEN  }}
      - uses: 3bit/setup-hcloud@v2
      - uses: yokawasa/action-setup-kube-tools@v0.9.3
        with:
          setup-tools: |
            helm
            kubectl
            skaffold
          helm: v3.11.2
          kubectl: v1.28.1
          skaffold: v2.3.0
      - name: Install k3sup
        run: |
          curl -sLS https://get.k3sup.dev | sh

      - name: Setup test environment
        run: |
          source <(hack/dev-up.sh)
          
          # make exported env variables available to following jobs
          echo "KUBECONFIG=$KUBECONFIG" >> "$GITHUB_ENV"
          echo "SKAFFOLD_DEFAULT_REPO=$SKAFFOLD_DEFAULT_REPO" >> "$GITHUB_ENV"

      - name: Build and Deploy HCCM
        run: |
          skaffold build --tag="e2e-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}"
          tag=$(skaffold build --tag="e2e-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}" --quiet --output="{{ (index .Builds 0).Tag }}")
          skaffold deploy --images=hetznercloud/hcloud-cloud-controller-manager=$tag

      - name: Run tests
        run: |
          go test ./tests/e2e -tags e2e -v -timeout 60m

      - name: Download logs & events
        if: always()
        continue-on-error: true
        run: |
          mkdir debug-logs
          kubectl logs \
            --namespace kube-system \
            --selector app.kubernetes.io/name=hcloud-cloud-controller-manager \
            --all-containers \
            --prefix=true \
            --tail=-1 \
            > debug-logs/hccm.log
          
          kubectl get events \
            --all-namespaces \
            --sort-by=.firstTimestamp \
            --output yaml \
          > debug-logs/events.yaml

      - name: Show HCCM Logs on Failure
        if: failure()
        continue-on-error: true
        run: |
          echo "::group::hccm.log"
          cat debug-logs/hccm.log
          echo "::endgroup::"

      - name: Cleanup test environment
        if: always()
        continue-on-error: true
        run: |
          hack/dev-down.sh

      - name: Persist debug artifacts
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: debug-logs-${{ env.SCOPE }}
          path: debug-logs/
