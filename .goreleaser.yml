# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
---
version: 2

before:
  hooks:
    - go mod tidy
    - ./scripts/release-generate-deployment-yamls.sh {{ .Version }}

builds:
  - id: binary
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - arm
    binary: hcloud-cloud-controller-manager
    ldflags:
      - -s
      - -w
      - -X github.com/hetznercloud/hcloud-cloud-controller-manager/hcloud.providerVersion={{ if not .IsSnapshot }}v{{ end }}{{ .Version }}
      - -X k8s.io/component-base/version.gitVersion=v0.0.0-master+v{{ .Version }}

dockers:
  - id: docker-amd64
    build_flag_templates: [--platform=linux/amd64]
    dockerfile: Dockerfile
    goarch: amd64
    image_templates:
      - hetznercloud/hcloud-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-amd64
    use: buildx
  - id: docker-arm64
    build_flag_templates: [--platform=linux/arm64]
    dockerfile: Dockerfile
    goarch: arm64
    image_templates:
      - hetznercloud/hcloud-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-arm64v8
    use: buildx
  - id: docker-armv6
    build_flag_templates: [--platform=linux/arm/v6]
    dockerfile: Dockerfile
    goarch: arm
    goarm: 6
    image_templates:
      - hetznercloud/hcloud-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-armv6
    use: buildx

docker_manifests:
  - id: docker-manifest
    name_template: hetznercloud/hcloud-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}
    image_templates:
      - hetznercloud/hcloud-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-amd64
      - hetznercloud/hcloud-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-arm64v8
      - hetznercloud/hcloud-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-armv6

archives:
  - id: archive
    ids:
      - binary
    name_template: "{{ .Binary }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    files:
      - LICENSE
      - README.md

release:
  ids:
    - archive
  extra_files:
    - glob: ./deploy/ccm*.yaml
    - glob: ./hcloud-cloud-controller-manager-{{ .Version }}.tgz

publishers:
  - name: publish-helm-chart

    # Filter all artifacts, except the one generated by "release.extra_files" that
    # cannot be filtered. If the "release" step does not run, the publisher will have
    # not artifacts to publish.
    ids: ["none"]

    cmd: ./scripts/publish-helm-chart.sh hcloud-cloud-controller-manager-{{ .Version }}.tgz
    env:
      - CHART_REPO_REMOTE={{ .Env.CHART_REPO_REMOTE }}
      # Ensures we only publish once, when $1 == $GORELEASER_ARTIFACT_FILE
      - GORELEASER_ARTIFACT_FILE={{ .ArtifactPath }}
