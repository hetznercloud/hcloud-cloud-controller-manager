# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
---
before:
  hooks:
    - go mod tidy
    #- ./scripts/generate-deployment-yamls.sh {{ if not .IsSnapshot }}v{{ end }}{{ .Version }} # via charts.syself.com

builds:
  - id: hetzner-cloud-controller-manager
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - arm
    binary: hetzner-cloud-controller-manager
    ldflags:
      - "-s -w -X github.com/syself/hetzner-cloud-controller-manager/hcloud.providerVersion={{ if not .IsSnapshot }}v{{ end }}{{ .Version }}"

archives:
  - id: deployment-yamls
    builds: [""]
    name_template: "{{ .ProjectName }}_{{ .Version }}_deployment_yamls"
    wrap_in_directory: true

dockers:
  - build_flag_templates: [--platform=linux/amd64]
    dockerfile: Dockerfile
    goarch: amd64
    image_templates: ["ghcr.io/syself/hetzner-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-amd64"]
    use: buildx
  - build_flag_templates: [--platform=linux/arm64]
    dockerfile: Dockerfile
    goarch: arm64
    image_templates: ["ghcr.io/syself/hetzner-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-arm64v8"]
    use: buildx
  - build_flag_templates: [--platform=linux/arm/v6]
    dockerfile: Dockerfile
    goarch: arm
    goarm: 6
    image_templates: ["ghcr.io/syself/hetzner-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-armv6"]
    use: buildx

docker_manifests:
  - name_template: ghcr.io/syself/hetzner-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}
    image_templates:
      - ghcr.io/syself/hetzner-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-amd64
      - ghcr.io/syself/hetzner-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-arm64v8
      - ghcr.io/syself/hetzner-cloud-controller-manager:{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}-armv6

release:
  ids: [""]
  extra_files:
    - glob: "./deploy/ccm*.yaml"
    - glob: "./hetzner-cloud-controller-manager-*.tgz"

# via https://github.com/syself/charts
#publishers:
#  - name: helm-chart-repo
#    ids: # make sure that this is only executed once by filtering for *one arbitrary* artifact ID
#      - deployment-yamls
#    cmd: ./scripts/publish-helm-chart.sh hetzner-cloud-controller-manager-{{ if not .IsSnapshot }}v{{ end }}{{ .Version }}.tgz
#    env:
#      - CHART_REPO_REMOTE={{ .Env.CHART_REPO_REMOTE }}
