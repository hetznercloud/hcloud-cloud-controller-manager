---
include:
  - project: "hc/backend/deploy-tools"
    file: "ci/release/image.yml"
  - project: "hc/backend/deploy-tools"
    file: "ci/build/image.yml"


stages:
  - test
  - E2E
  - build
  - release

variables:
  GOPROXY: goproxy.prodext.hcinfra.de
  GONOSUMDB: hetzner.cloud

test:lint:
  stage: test
  image: golangci/golangci-lint:v1.27.0
  allow_failure: true
  script:
    - golangci-lint run -v
  except:
    - tags
    - master
  tags:
    - hc-bladerunner

test:unit:
  stage: test
  image: golang:1.16
  variables:
    NODE_NAME: "test"
  script:
    - go test $(go list ./... | grep -v e2etests) -v
  tags:
    - hc-bladerunner

.e2e:k8s: &testk8se2e
  stage: E2E
  image: docker:git
  variables:
    K8S_VERSION: k8s-1.19.10
  before_script:
    - apk add --no-cache git make musl-dev go openssh-client
  script:
    - go test $(go list ./... | grep e2etests) -v -timeout 60m
  tags:
    - hc-bladerunner-build

k8s-1.19:
  <<: *testk8se2e
  variables:
    K8S_VERSION: k8s-1.19.10

k8s-1.19 networks:
  <<: *testk8se2e
  variables:
    K8S_VERSION: k8s-1.19.10
    USE_NETWORKS: "yes"

k8s-1.20:
  <<: *testk8se2e
  variables:
    K8S_VERSION: k8s-1.20.6

k8s-1.20 networks:
  <<: *testk8se2e
  variables:
    K8S_VERSION: k8s-1.20.6
    USE_NETWORKS: "yes"

k8s-1.21:
  <<: *testk8se2e
  variables:
    K8S_VERSION: k8s-1.21.0

k8s-1.21 networks:
  <<: *testk8se2e
  variables:
    K8S_VERSION: k8s-1.21.0
    USE_NETWORKS: "yes"
