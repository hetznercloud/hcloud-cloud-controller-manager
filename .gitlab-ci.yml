---
include:
  - project: cloud/integrations/ci
    file: default.yml
  - project: cloud/backend/deploy-tools
    file: ci/build/image.yml
  - project: cloud/backend/deploy-tools
    file: ci/release/image.yml

stages:
  - test
  - build
  - build:image
  - e2e-test
  - release
  - release:image

variables:
  GOPROXY: goproxy.prodext.hcinfra.de
  GONOSUMDB: hetzner.cloud

test:lint:
  stage: test
  image: golangci/golangci-lint:v1.59.1
  allow_failure: true
  script:
    - golangci-lint run -v
  except:
    - tags
    - main

test:unit:
  stage: test
  image: golang:1.21
  script:
    - go test ./... -v

.build:goreleaser: &build-goreleaser
  stage: build
  image:
    name: goreleaser/goreleaser
    entrypoint: [""]
  variables:
    GIT_DEPTH: 0
  after_script:
    - cp dist/hcloud-cloud-controller-manager_linux_amd64_v1/hcloud-cloud-controller-manager hcloud-cloud-controller-manager
  artifacts:
    paths:
      - hcloud-cloud-controller-manager
    expire_in: 1 day

build:goreleaser:snapshot:
  <<: *build-goreleaser
  script: |
    goreleaser build --rm-dist --snapshot
  except:
    - tags

build:goreleaser:tags:
  <<: *build-goreleaser
  script: |
    goreleaser build --rm-dist
  only:
    - tags

build:image:
  stage: build:image

e2e:
  stage: e2e-test
  image: docker:git
  variables:
    CCM_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  parallel:
    matrix:
      - K8S_VERSION: [k8s-1.24.10, k8s-1.25.6, k8s-1.26.1]
        USE_NETWORKS: ["yes", "no"]
      - K8S_VERSION: [k3s-v1.24.10+k3s1, k3s-v1.25.6+k3s1, k3s-v1.26.1+k3s1]
        USE_NETWORKS: ["yes", "no"]
  before_script:
    - apk add --no-cache git make musl-dev go openssh-client

      # Make pre-built docker image available
    - docker login $CI_REGISTRY --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD
    - docker pull $CCM_IMAGE_NAME
  script:
    - go test ./... -tags e2e -v -timeout 60m

release:image:
  stage: release:image
