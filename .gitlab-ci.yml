---
include:
  - project: "hc/backend/deploy-tools"
    file: "ci/build/image.yml"
  - project: "hc/backend/deploy-tools"
    file: "ci/release/image.yml"

stages:
  - test
  - build
  - build:image
  - e2e-test
  - e2e-test-k8s
  - e2e-test-k8s-networks
  - e2e-test-k3s
  - e2e-test-k3s-networks
  - release
  - release:image

variables:
  GOPROXY: goproxy.prodext.hcinfra.de
  GONOSUMDB: hetzner.cloud

test:lint:
  stage: test
  image: golangci/golangci-lint:v1.27.0
  allow_failure: true
  script:
    - golangci-lint run -v
  except:
    - tags
    - master
  tags:
    - hc-bladerunner

test:unit:
  stage: test
  image: golang:1.19
  variables:
    NODE_NAME: "test"
  script:
    - go test $(go list ./... | grep -v e2etests) -v
  tags:
    - hc-bladerunner

.build:goreleaser: &build-goreleaser
  stage: build
  image:
    name: goreleaser/goreleaser
    entrypoint: [""]
  variables:
    GIT_DEPTH: 0
  after_script:
    - cp dist/hcloud-cloud-controller-manager_linux_amd64/hcloud-cloud-controller-manager hcloud-cloud-controller-manager
  artifacts:
    paths:
      - hcloud-cloud-controller-manager
    expire_in: 1 day
  tags:
    - hc-bladerunner

build:goreleaser:snapshot:
  <<: *build-goreleaser
  script: |
    goreleaser build --rm-dist --snapshot
  except:
    - tags

build:goreleaser:tags:
  <<: *build-goreleaser
  script: |
    goreleaser build --rm-dist
  only:
    - tags

build:image:
  stage: build:image

.e2e:k8s: &testk8se2e
  stage: e2e-test
  image: docker:git
  variables:
    K8S_VERSION: k8s-1.19.10
    CCM_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  before_script:
    - apk add --no-cache git make musl-dev go openssh-client
  script:
    - go test $(go list ./... | grep e2etests) -v -timeout 60m
  tags:
    - hc-bladerunner-build

k8s-1.20:
  <<: *testk8se2e
  stage: e2e-test-k8s
  variables:
    K8S_VERSION: k8s-1.20.12

k8s-1.20-networks:
  <<: *testk8se2e
  stage: e2e-test-k8s-networks
  variables:
    K8S_VERSION: k8s-1.20.12
    USE_NETWORKS: "yes"

k8s-1.21:
  <<: *testk8se2e
  stage: e2e-test-k8s
  variables:
    K8S_VERSION: k8s-1.21.6

k8s-1.21-networks:
  <<: *testk8se2e
  stage: e2e-test-k8s-networks
  variables:
    K8S_VERSION: k8s-1.21.6
    USE_NETWORKS: "yes"

k8s-1.22:
  <<: *testk8se2e
  stage: e2e-test-k8s
  variables:
    K8S_VERSION: k8s-1.22.3

k8s-1.22-networks:
  <<: *testk8se2e
  stage: e2e-test-k8s-networks
  variables:
    K8S_VERSION: k8s-1.22.3
    USE_NETWORKS: "yes"

.e2e:k3s: &testk3se2e
  stage: e2e-test
  image: docker:git
  variables:
    K8S_VERSION: k3s-1.20.12+k3s1
    CCM_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  before_script:
    - apk add --no-cache git make musl-dev go openssh-client
  script:
    - go test $(go list ./... | grep e2etests) -v -timeout 60m
  tags:
    - hc-bladerunner-build

k3s-1.20:
  <<: *testk3se2e
  stage: e2e-test-k3s
  variables:
    K8S_VERSION: k3s-1.20.12+k3s1

k3s-1.20-networks:
  <<: *testk3se2e
  stage: e2e-test-k3s-networks
  variables:
    K8S_VERSION: k3s-1.20.12+k3s1
    USE_NETWORKS: "yes"

k3s-1.21:
  <<: *testk3se2e
  stage: e2e-test-k3s
  variables:
    K8S_VERSION: k3s-1.21.6+k3s1

k3s-1.21-networks:
  <<: *testk3se2e
  stage: e2e-test-k3s-networks
  variables:
    K8S_VERSION: k3s-1.21.6+k3s1
    USE_NETWORKS: "yes"

k3s-1.22:
  <<: *testk3se2e
  stage: e2e-test-k3s
  variables:
    K8S_VERSION: k3s-1.22.3+k3s1

k3s-1.22-networks:
  <<: *testk3se2e
  stage: e2e-test-k3s-networks
  variables:
    K8S_VERSION: k3s-1.22.3+k3s1
    USE_NETWORKS: "yes"

release:image:
  stage: release:image
